{% block title %}Mixtureで始めるプロトタイピング{% endblock %}

{% block styles %}{% endblock %}

{% block content %}
<div class="reveal">

  <!-- Any section element inside of this container is displayed as a slide -->
  <div class="slides">
    {% for item in model.item %}
    <section>
      {% if item.h1 %}
      <h1>{{ item.h1 }}</h1>
      {% endif %}
      {% if item.h2 %}
      <h2>{{ item.h2 }}</h2>
      {% endif %}
      {% if item.h3 %}
      <h3>{{ item.h3 }}</h3>
      {% endif %}
      {% if item.h4 %}
      <h4>{{ item.h4 }}</h4>
      {% endif %}
      {% if item.pre %}
      <pre>{{ item.pre }}</pre>
      {% endif %}
      {% if item.p %}
      <p>{{ item.p }}</p>
      {% endif %}
      {% if item.ul %}
      <ul>
        {% for li in item.ul %}
        <li>{{ li }}</li>
        {% endfor %}
      </ul>
      {% endif %}
      {% if item.ol %}
      <ol>
        {% for li in item.ol %}
        <li>{{ li }}</li>
        {% endfor %}
      </ol>
      {% endif %}
    </section>
    {% endfor %}
  </div>

</div>
{% endblock %}

{% block scripts %}
<script>
  // Full list of configuration options available here:
  // https://github.com/hakimel/reveal.js#configuration
  Reveal.initialize({
    controls: true,
    progress: true,
    history: true,
    center: true,
    rollingLinks: false,
    theme: 'beige', // available themes are in /css/theme
    transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none

    // Optional libraries used to extend on reveal.js
    dependencies: [
      { src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
      { src: 'plugin/markdown/showdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
      { src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
      { src: 'plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
      { src: 'plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
      { src: 'plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }
    ]
  });
</script>
{% endblock %}
